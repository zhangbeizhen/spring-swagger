<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd   
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd 
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
      
    <!-- 2018-12-28 -->
    <!-- 以上引入名称空间:spring容器根据名称空间寻找对应模块,相当于引入模块 -->
      
    <!--引入注解驱动 -->
    <mvc:annotation-driven /> 
	<!-- 扫描包:扫描该包下所有模块 -->
	<context:component-scan base-package="com.zbz" />
	
	<!-- 配置线程池,参数 -->
	<bean id="threadPoolTaskExecutor" name="threadPoolTaskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		 <!-- 核心线程数 线程池维护线程的最少数量 -->
		<property name="corePoolSize" value="${executor.corePoolSize}" />
		 <!-- 线程池维护线程所允许的空闲时间 -->
        <property name="keepAliveSeconds" value="${executor.keepAliveSeconds}" />  
         <!-- 线程池维护线程的最大数量 -->
		<property name="maxPoolSize" value="${executor.maxPoolSize}" />
		 <!-- 线程池所使用的缓冲队列 -->
		<property name="queueCapacity" value="${executor.queueCapacity}" />
		<!-- 线程池对拒绝任务(无线程可用)的处理策略 ThreadPoolExecutor.CallerRunsPolicy策略 ,调用者的线程会执行该任务,如果执行器已关闭,则丢弃.  -->
        <property name="rejectedExecutionHandler">
            <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
        </property>
        <!-- 注意: ${executor.corePoolSize} 这些从配置文件ForPlatformconfig.properties获取 -->
	</bean>
	
	<!-- 引入 restTemplate模板操作类,使用时即可自动导入-->
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate" />
     
    <!-- 配置属性文件密码字符加密解密 application.properties -->
    <bean id="config" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>/WEB-INF/classes/common/application.properties</value>
			</list>
		</property>
	</bean>
     
</beans>